stages:
  - check
  - build
  - test
  - deploy

variables:
  GIT_STRATEGY: clone   

before_script:
  - echo "Starting GitLab CI pipeline"

check_changes:
  stage: check
  image: alpine:3.17
  before_script:
    - echo "Installing git..."
    - apk add --no-cache git
  script:
    - echo "Checking for changes..."
    - |
      CHANGED_SERVICE="NONE"
      if git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | grep -q '^api-gateway/'; then
        CHANGED_SERVICE="api-gateway"
      elif git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | grep -q '^deployment-service/'; then
        CHANGED_SERVICE="deployment-service"
      elif git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | grep -q '^integration-manager/'; then
        CHANGED_SERVICE="integration-manager"
      elif git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | grep -q '^template-service/'; then
        CHANGED_SERVICE="template-service"
      elif git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | grep -q '^shared/'; then
        CHANGED_SERVICE="all"
      fi
      echo $CHANGED_SERVICE > service.txt
  artifacts:
    paths:
      - service.txt

build_service:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - export SERVICE=$(cat service.txt)
    - echo "Building Docker image for $SERVICE..."
    - if [ "$SERVICE" != "all" ]; then
        docker build --build-arg SERVICE_NAME="$SERVICE" -t $CI_REGISTRY_IMAGE/${SERVICE// /-}:$CI_COMMIT_SHORT_SHA -f shared/Dockerfile .;
      else
        docker build --build-arg SERVICE_NAME="api-gateway" -t $CI_REGISTRY_IMAGE/api-gateway:$CI_COMMIT_SHORT_SHA -f shared/Dockerfile .;
        docker build --build-arg SERVICE_NAME="deployment-service" -t $CI_REGISTRY_IMAGE/deployment-service:$CI_COMMIT_SHORT_SHA -f shared/Dockerfile .;
        docker build --build-arg SERVICE_NAME="integration-manager" -t $CI_REGISTRY_IMAGE/integration-manager:$CI_COMMIT_SHORT_SHA -f shared/Dockerfile .;
        docker build --build-arg SERVICE_NAME="template-service" -t $CI_REGISTRY_IMAGE/template-service:$CI_COMMIT_SHORT_SHA -f shared/Dockerfile .;
      fi
  dependencies:
    - check_changes
  only:
    changes:
      - api-gateway/**
      - deployment-service/**
      - integration-manager/**
      - template-service/**
      - shared/**

deploy_service:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - export SERVICE=$(cat service.txt)
    - if [ "$SERVICE" != "ALL" ]; then
        echo "Pushing Docker image for $SERVICE...";
        docker push $CI_REGISTRY_IMAGE/${SERVICE// /-}:$CI_COMMIT_SHORT_SHA;
      else
        echo "Pushing Docker images for all services...";
        docker push $CI_REGISTRY_IMAGE/api-gateway:$CI_COMMIT_SHORT_SHA;
        docker push $CI_REGISTRY_IMAGE/deployment-service:$CI_COMMIT_SHORT_SHA;
        docker push $CI_REGISTRY_IMAGE/integration-manager:$CI_COMMIT_SHORT_SHA;
        docker push $CI_REGISTRY_IMAGE/template-service:$CI_COMMIT_SHORT_SHA;
      fi
  only:
    - main
  dependencies:
    - build_service
